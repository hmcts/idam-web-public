#!groovy

properties([
    pipelineTriggers([cron('10 21 * * *')]),

    parameters([

        string(name: 'URL_TO_TEST', defaultValue: 'https://idam-web-public.aat.platform.hmcts.net', description: 'The URL you want to run these tests against'),
        string(name: 'API_URL_TO_TEST', defaultValue: 'https://idam-api.aat.platform.hmcts.net', description: 'The API URL you want to run these tests against '),
    ])
])

@Library("Infrastructure") _

def type = "java"

def product = "idam"

def component = "web-public"

def secrets = [
    'idam-idam-aat': [
        secret('smoke-test-user-username', 'SMOKE_TEST_USER_USERNAME'),
        secret('smoke-test-user-password', 'SMOKE_TEST_USER_PASSWORD'),
        secret('notify-api-key', 'NOTIFY_API_KEY')
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [$class : 'AzureKeyVaultSecret',
     secretType : 'Secret',
     name : secretName,
     version : '',
     envVariable: envVar
    ]
}

withNightlyPipeline(type, product, component) {
    env.TEST_URL = params.URL_TO_TEST
    env.IDAMAPI = params.API_URL_TO_TEST
    loadVaultSecrets(secrets)
    enableSecurityScan()
    enableMutationTest()
    enableFullFunctionalTest(200)
    enableCrossBrowserTest()

    after('crossBrowserTest') {
        try {
            withSauceConnect("reform_tunnel") {
                sh "./gradlew functionalSauce"
                steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
            }
        }
        finally {
            steps.saucePublisher()
        }
    }

    after('fullFunctionalTest') {

        sh "./gradlew smoke"

        archiveArtifacts '**/build/test-results/**/*'

        publishHTML target: [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "output",
            reportFiles          : "idam-web-public-e2e-result.html",
            reportName           : "IDAM Web Public E2E smoke tests result"
        ]

        sh "./gradlew functional"

        archiveArtifacts '**/build/test-results/**/*'

        publishHTML target: [
            allowMissing : true,
            alwaysLinkToLastBuild: true,
            keepAll : true,
            reportDir : "output",
            reportFiles : "idam-web-public-e2e-result.html",
            reportName : "IDAM Web Public E2E functional tests result"
        ]
    }
}