#!groovy

@Library("Infrastructure@SIDM_increase_FuncTest_timout")

def type = "java"
def product = "idam"
def component = "web-public"
def secrets = [
    'idam-idam-${env}': [
        secret('smoke-test-user-username', 'SMOKE_TEST_USER_USERNAME'),
        secret('smoke-test-user-password', 'SMOKE_TEST_USER_PASSWORD'),
        secret('notify-api-key', 'NOTIFY_API_KEY')
    ]
]

properties([
    parameters([
        choice(name: 'ENVIRONMENT', choices: 'idam-sandbox\npreview', description: 'Environment where code should be build and deployed'),
        choice(name: 'SUBSCRIPTION', choices: 'sandbox\nnonprod', description: 'Azure subscriptions available to build in')
    ])
])

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [$class     : 'AzureKeyVaultSecret',
     secretType : 'Secret',
     name       : secretName,
     version    : '',
     envVariable: envVar
    ]
}

withParameterizedPipeline(type, product, component, params.ENVIRONMENT, params.SUBSCRIPTION){
  loadVaultSecrets(secrets)
  enableSlackNotifications('#idam_tech')
  enableAksStagingDeployment()
  disableLegacyDeployment()

  // AKS Callbacks
  before('akschartsinstall') {
    env.PREVIEW_ENVIRONMENT_NAME = 'preview'
    env.NONPROD_ENVIRONMENT_NAME = 'preview'
    println """\
            Using PREVIEW_ENVIRONMENT_NAME: ${env.PREVIEW_ENVIRONMENT_NAME}
            Using NONPROD_ENVIRONMENT_NAME: ${env.NONPROD_ENVIRONMENT_NAME}""".stripIndent()
  }
  
  before('smoketest-aks:idam-preview') {
    env.PREVIEW_ENVIRONMENT_NAME = 'preview'   
    env.NONPROD_ENVIRONMENT_NAME = 'preview'
    env.IDAMAPI = "https://idam-api.service.core-compute-preview.internal"
    println """\
            Using PREVIEW_ENVIRONMENT_NAME: ${env.PREVIEW_ENVIRONMENT_NAME}
            Using NONPROD_ENVIRONMENT_NAME: ${env.NONPROD_ENVIRONMENT_NAME}
            Using IDAMAPI: ${env.IDAMAPI}""".stripIndent()
  }

  before('functionalTest-aks:idam-preview') {
    env.PREVIEW_ENVIRONMENT_NAME = 'preview'
    env.NONPROD_ENVIRONMENT_NAME = 'preview'
    env.IDAMAPI = "https://idam-api.service.core-compute-preview.internal"
    println """\
            Using PREVIEW_ENVIRONMENT_NAME: ${env.PREVIEW_ENVIRONMENT_NAME}
            Using NONPROD_ENVIRONMENT_NAME: ${env.NONPROD_ENVIRONMENT_NAME}
            Using IDAMAPI: ${env.IDAMAPI}""".stripIndent()
  }

  after('akschartsinstall') {
    env.PREVIEW_ENVIRONMENT_NAME = 'idam-preview'
    env.NONPROD_ENVIRONMENT_NAME = 'idam-aat'
    println """\
            Using PREVIEW_ENVIRONMENT_NAME: ${env.PREVIEW_ENVIRONMENT_NAME}
            Using NONPROD_ENVIRONMENT_NAME: ${env.NONPROD_ENVIRONMENT_NAME}""".stripIndent()
  }
  
  after('smoketest-aks:idam-preview') {
    env.PREVIEW_ENVIRONMENT_NAME = 'idam-preview'
    env.NONPROD_ENVIRONMENT_NAME = 'idam-aat'
    println """\
            Using PREVIEW_ENVIRONMENT_NAME: ${env.PREVIEW_ENVIRONMENT_NAME}
            Using NONPROD_ENVIRONMENT_NAME: ${env.NONPROD_ENVIRONMENT_NAME}""".stripIndent()
  }

  after('functionalTest-aks:idam-preview') {
    env.PREVIEW_ENVIRONMENT_NAME = 'idam-preview'
    env.NONPROD_ENVIRONMENT_NAME = 'idam-aat'
    println """\
            Using PREVIEW_ENVIRONMENT_NAME: ${env.PREVIEW_ENVIRONMENT_NAME}
            Using NONPROD_ENVIRONMENT_NAME: ${env.NONPROD_ENVIRONMENT_NAME}""".stripIndent()
  }
  // End AKS Callbacks
  
  after('test') {
    publishHTML target: [
        allowMissing         : true,
        alwaysLinkToLastBuild: true,
        keepAll              : true,
        reportDir            : "build/reports/jacoco",
        reportFiles          : "index.html",
        reportName           : "IdAM Web Public Code Coverage Report"
    ]

    publishHTML target: [
        allowMissing         : true,
        alwaysLinkToLastBuild: true,
        keepAll              : true,
        reportDir            : "build/reports/pmd",
        reportFiles          : "main.html",
        reportName           : "IdAM Web Public PMD Report"
    ]
  }

  after('smoketest:idam-preview') {
    archiveArtifacts '**/build/test-results/**/*'

    publishHTML target: [
        allowMissing         : true,
        alwaysLinkToLastBuild: true,
        keepAll              : true,
        reportDir            : "output",
        reportFiles          : "idam-web-public-e2e-result.html",
        reportName           : "IDAM Web Public E2E smoke tests result"
    ]
  }

  after('functionalTest:idam-preview') {
    archiveArtifacts '**/build/test-results/**/*'
    archiveArtifacts '**/functional-output/**/*'

    publishHTML target: [
        allowMissing         : true,
        alwaysLinkToLastBuild: true,
        keepAll              : true,
        reportDir            : "output",
        reportFiles          : "idam-web-public-e2e-result.html",
        reportName           : "IDAM Web Public E2E functional tests result"
    ]
  }
  
  before('buildinfra:idam-prod') {
      error('Stopping pipeline before Prod stages')
  }
}