import java.util.stream.Collectors

plugins {
  id 'java'
  id 'jacoco'
  id 'application'
  alias libs.plugins.spring apply false
  alias libs.plugins.spring.framework apply false
  alias libs.plugins.owasp
  alias libs.plugins.sonarqube
  alias libs.plugins.pitest
  alias libs.plugins.git.properties
}

apply from: './gradle/jira.gradle'

gitProperties {
  // Change date format in git.properties file.
  dateFormat = "yyyy-MM-dd HH:mm:ssZ"
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

allprojects {
  apply plugin: 'java'
  apply plugin: 'io.spring.dependency-management'
  apply plugin: 'org.owasp.dependencycheck'
  apply plugin: 'war'
  apply plugin: 'org.springframework.boot'
  apply plugin: 'application'

  group = 'uk.gov.hmcts.reform.idam'
  description = 'idam-web-public'

  sourceCompatibility = 17
  targetCompatibility = 17

  configurations.all {
    exclude group: "org.glassfish", module: "jakarta.el"
  }

  def springBootVersion = libs.versions.spring.boot.get()

  dependencyManagement {
    imports {
      mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    }
  }

  ext['okhttp.version'] = '4.11.0'
  ext['netty.version'] = '4.1.100.Final' // CVE-2023-44487
  ext['jackson.version'] = '2.16.2'

  repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    jcenter()
  }

  dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'false' ? 11 : 0
    suppressionFile = "${project.rootDir}" + '//dependency-check-suppressions.xml'

    analyzers {
      // Disable scanning of .NET related binaries
      assemblyEnabled = false
      nodeEnabled = false
      nodeAudit {
        enabled = false
        yarnEnabled = false
      }
    }
  }

  dependencies {
    configurations.all {
      exclude group:"org.bouncycastle", module: "bcprov-jdk15on"
      exclude group:"org.bouncycastle", module: "bcutil-jdk15on"
      exclude group:"org.bouncycastle", module: "bcpkix-jdk15on"
    }

    implementation 'org.bouncycastle:bcprov-jdk18on:1.78.1'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.78.1'
    implementation 'org.bouncycastle:bcutil-jdk18on:1.78.1'

    implementation (libs.idam.api.spec) {
      exclude module: 'springfox-swagger2'
      exclude module: 'springfox-swagger-ui'
    }
    implementation libs.guava
    implementation libs.commons.fileupload
    implementation libs.commons.io
    implementation libs.commons.text
    implementation libs.snakeyaml
    implementation libs.findbugs.jsr305
    implementation (libs.bundles.feign) {
      exclude group: 'commons-fileupload'
      exclude module: 'commons-fileupload'
    }
    implementation libs.bundles.applicationinsights

    implementation group: 'com.squareup.okio', name: 'okio', version: '3.9.0'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator'

    implementation group: 'org.springframework.security', name: 'spring-security-web'
    implementation group: 'org.springframework.security', name: 'spring-security-data'
    implementation group: 'org.springframework.security', name: 'spring-security-config'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-resource-server'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis-reactive'
    implementation group: 'org.springframework.session', name: 'spring-session-data-redis', version: '2.7.4'
    implementation group: 'org.springframework.data', name: 'spring-data-redis', version: '2.6.4'

    implementation(group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-zuul', version: '2.2.10.RELEASE') {
      exclude(module: 'rxnetty-contexts')
      exclude(module: 'rxnetty-servo')
      exclude(module: 'rxnetty')
    }

    implementation group: 'com.netflix.servo', name: 'servo-core', version: '0.13.2'
    implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '9.40'
    implementation group: 'org.springframework.security', name: 'spring-security-taglibs'

    compileOnly("org.projectlombok:lombok")

    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation group: 'javax.servlet', name: 'jstl'
    implementation group: 'javax.json', name: 'javax.json-api'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient'
    implementation group: 'org.apache.httpcomponents', name: 'httpcore'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat'
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version: '9.0.91'
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '9.0.91'
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: '10.1.26'
    implementation group: 'org.pitest', name: 'pitest', version: '1.16.1'
    implementation group: 'info.solidsoft.gradle.pitest', name: 'gradle-pitest-plugin', version: '1.15.0'
    implementation group: 'org.owasp.encoder', name: 'encoder-jsp', version: '1.2.3'
    implementation (group: 'org.codehaus.sonar-plugins', name: 'sonar-pitest-plugin', version: '0.5') {
      exclude module: 'junit'
    }

    testImplementation 'com.github.hmcts:fortify-client:1.4.3:all'
    testCompileOnly("org.projectlombok:lombok")
    testAnnotationProcessor("org.projectlombok:lombok")
    testImplementation('pl.pragmatists:JUnitParams:1.1.1') {
      exclude(module: 'junit')
    }

    testImplementation group: 'org.mockito', name: 'mockito-core'
    testImplementation group: 'org.springframework', name: 'spring-test'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-devtools'
    testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
      exclude(module: 'commons-logging')
    }
    testImplementation group: 'org.springframework.security', name: 'spring-security-test'
    testImplementation group: 'junit', name: 'junit'
  }

  task createAJiraTicket() {
    doLast {
      String token = System.getenv("JIRA_API_TOKEN")
      createFailedPipelineJiraTicket(token)
    }
  }

  task fortifyScan(type: JavaExec)  {
    classpath += sourceSets.test.runtimeClasspath
    main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
  }

  tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
  }

  bootRun {
    systemProperties = System.properties
  }

  task smoke(dependsOn: ':codeceptSmoke') {
    group = 'Delivery pipeline'
    description = 'Executes non-destructive smoke tests against a running instance'
  }

  task functional(dependsOn: ':codeceptFunctional') {
    group = 'Delivery pipeline'
    description = 'Executes functional tests against a running instance'
  }

  task yarnInstall(type: Exec) {
    workingDir '.'
    commandLine 'yarn', 'install'
  }

  task notifyClientInstall(type: Exec) {
    workingDir '.'
    commandLine 'yarn', 'add', 'notifications-node-client'
  }

  task codeceptSmoke(type: Exec, dependsOn: ':yarnInstall') {
    workingDir '.'
    commandLine 'node_modules/codeceptjs/bin/codecept.js', 'run', '--grep', '@smoke', '--verbose', '--reporter', 'mocha-multi', '-c', 'codecept.smoke.conf.js'
  }

  task codeceptFunctional(type: Exec, dependsOn :'yarnInstall') {
    workingDir '.'
    commandLine 'node_modules/codeceptjs/bin/codecept.js', 'run', '--grep', '@functional', '--verbose', '--reporter', 'mocha-multi'
  }

  task smokeSauce(dependsOn: ':codeceptSmokeSauce') {
    group = 'Delivery pipeline'
    description = 'Executes non-destructive smoke tests against a running instance'
  }

  task codeceptSmokeSauce(type: Exec, dependsOn: ':yarnInstall') {
    workingDir '.'
    commandLine 'node_modules/codeceptjs/bin/codecept.js', 'run', '--config', 'saucelabs.conf.js', '--steps', '--grep', '@smoke', '--verbose', '--debug', '--reporter', 'mochawesome'
  }

  task crossbrowser(dependsOn: ':codeceptFunctionalSauce') {
    group = 'Delivery pipeline'
    description = 'Execute cross browser tests on saucelabs'
  }

  task codeceptFunctionalSauce(type: Exec, dependsOn: ':yarnInstall') {
    workingDir '.'
    commandLine 'node_modules/codeceptjs/bin/codecept.js', 'run-multiple', '--all', '--config', 'saucelabs.conf.js', '--grep', '@crossbrowser', '--verbose', '--debug', '--steps', '--reporter', 'mocha-multi'
  }

}

project.tasks['sonarqube'].dependsOn test

def listFiles(String pattern) {
  return new FileNameFinder()
    .getFileNames("${project.rootDir}", pattern)
    .stream()
    .collect(Collectors.joining(","))
}

sonarqube {
  properties {
    property "sonar.projectName", "SIDAM-WEB-PUBLIC"
    property "sonar.exclusions", "**/uk/gov/hmcts/reform/idam/web/config/properties/*.java," +
      "**/uk/gov/hmcts/reform/idam/web/config/IdamWebMvcConfiguration.java," +
      "**/uk/gov/hmcts/reform/idam/web/config/SessionConfiguration.java," +
      "**/uk/gov/hmcts/reform/idam/web/config/AppConfiguration.java," +
      "**/uk/gov/hmcts/reform/idam/web/config/AppConfigurationSSO.java," +
      "**/uk/gov/hmcts/reform/idam/web/model/*.java," +
      "**/uk/gov/hmcts/reform/idam/web/helper/MvcKeys.java," +
      "**/uk/gov/hmcts/reform/idam/web/Application.java," +
      "**/*Exception.java"
    property "sonar.host.url", "https://sonar.reform.hmcts.net/"
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco.xml"
  }
}

pitest {
  targetClasses = ['uk.gov.hmcts.reform.idam.*']
  threads = 10
  enableDefaultIncrementalAnalysis = true
  historyInputLocation = 'build/reports/pitest/fastermutationtesting'
  historyOutputLocation = 'build/reports/pitest/fastermutationtestingoutput'
  outputFormats = ['XML', 'HTML']
  timestampedReports = true
  mutationThreshold = 80
}

jacocoTestReport {
  reports {
    xml.required = true
    html.required = true
    html.destination file("${buildDir}/reports/jacoco")
    xml.destination file("${buildDir}/reports/jacoco.xml")
  }
}

test.finalizedBy jacocoTestReport

bootRun {
  systemProperties = System.properties
}
