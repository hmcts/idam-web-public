#!groovy

@Library("Infrastructure")

def type = "java"

def product = "idam"

def component = "web-public"

env.NO_SKIP_IMG_BUILD = 'true'

def vaultOverrides = [
  'preview': 'aat'
]

def secrets = [
    'idam-idam-${env}': [
        secret('smoke-test-user-username', 'SMOKE_TEST_USER_USERNAME'),
        secret('smoke-test-user-password', 'SMOKE_TEST_USER_PASSWORD'),
        secret('notify-api-key', 'NOTIFY_API_KEY')
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [$class     : 'AzureKeyVaultSecret',
     secretType : 'Secret',
     name       : secretName,
     version    : '',   
     envVariable: envVar
    ]
}

withPipeline(type, product, component) {
    overrideVaultEnvironments(vaultOverrides)
    loadVaultSecrets(secrets)
    enableDockerBuild()
    enableSlackNotifications('#idam_tech')
    installCharts()

    after('test') {
        publishHTML target: [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "build/reports/jacoco",
            reportFiles          : "index.html",
            reportName           : "IdAM Web Public Code Coverage Report"
        ]

        publishHTML target: [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "build/reports/pmd",
            reportFiles          : "main.html",
            reportName           : "IdAM Web Public PMD Report"
        ]
    }

    before('smoketest:preview') {
        env.IDAMAPI = "https://idam-api.aat.platform.hmcts.net"
        println "Using IDAMAPI: ${env.IDAMAPI}"
    }

    after('smoketest:idam-preview') {
        archiveArtifacts '**/build/test-results/**/*'

        publishHTML target: [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "output",
            reportFiles          : "idam-web-public-e2e-result.html",
            reportName           : "IDAM Web Public E2E smoke tests result"
        ]
    }

    before('smoketest:aat') {
        env.IDAMAPI = "https://idam-api.${env.ENVIRONMENT_NAME}.platform.hmcts.net"
        println "Using IDAMAPI: ${env.IDAMAPI}"
    }

    after('smoketest:aat') {
        archiveArtifacts '**/build/test-results/**/*'

        publishHTML target: [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "output",
            reportFiles          : "idam-web-public-e2e-result.html",
            reportName           : "IDAM Web Public E2E smoke tests result"
        ]
    }

    after('functionalTest:preview') {
        archiveArtifacts '**/build/test-results/**/*'

        publishHTML target: [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "output",
            reportFiles          : "idam-web-public-e2e-result.html",
            reportName           : "IDAM Web Public E2E functional tests result"
        ]
    }

    after('functionalTest:aat') {
        archiveArtifacts '**/build/test-results/**/*'

        publishHTML target: [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "output",
            reportFiles          : "idam-web-public-e2e-result.html",
            reportName           : "IDAM Web Public E2E functional tests result"
        ]
    }
}
